version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: taskdb_sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "yourStrong(!)Password"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "yourStrong(!)Password", "-Q", "SELECT 1", "-C"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: task_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  task-api:
    container_name: task_management_api
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=TaskManagementDb;User ID=sa;Password=yourStrong(!)Password;TrustServerCertificate=True"
      RabbitMq__HostName: "rabbitmq"
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  task-listener:
    container_name: task_event_listener
    build:
      context: .
      dockerfile: Dockerfile.listener
    environment:
      DOTNET_ENVIRONMENT: Development
      RabbitMq__HostName: "rabbitmq"
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  sqldata: 
  rabbitmq_data: